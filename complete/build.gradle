buildscript {
    ext {
        grailsVersion = project.grailsVersion
    }
    repositories {
        mavenCentral()
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath 'com.bertramlabs.plugins:asset-pipeline-gradle:2.7.2'   //Anything above this fials
        classpath "org.grails.plugins:hibernate5:${gormVersion-".RELEASE"}"
    }
}

plugins {
    id "io.spring.dependency-management" version "0.6.1.RELEASE"
}

version "0.1.1"
group "heroku"

apply plugin: "spring-boot"
apply plugin: "war"
apply plugin: "asset-pipeline"
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: "org.grails.grails-web"
apply plugin: "org.grails.grails-gsp"

ext {
    grailsVersion = project.grailsVersion
    gradleWrapperVersion = project.gradleWrapperVersion
}

assets {
    minifyJs = true
    minifyCss = true
}

repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
}

dependencyManagement {
    imports {
        mavenBom "org.grails:grails-bom:$grailsVersion"
    }
    applyMavenExclusions false
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    provided "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.grails:grails-dependencies"
    compile "org.grails:grails-web-boot"
    compile "org.grails.plugins:cache"
    compile "org.grails.plugins:scaffolding"

    compile "org.grails.plugins:hibernate"
    compile "org.hibernate:hibernate-ehcache"
    //compile "org.grails.plugins:hibernate5"
    //compile "org.hibernate:hibernate-core:5.1.3.Final"
    //compile "org.hibernate:hibernate-ehcache:5.1.3.Final"

    compile 'org.eclipse.jetty:jetty-runner:9.2.22.v20170606'
    compile 'com.github.jsimone:webapp-runner:8.0.44.0'

    console "org.grails:grails-console"
    //profile "org.grails.profiles:web"
    runtime "org.grails.plugins:asset-pipeline"
    runtime "org.grails.plugins:scaffolding"
    runtime 'org.postgresql:postgresql:9.4-1201-jdbc4'
    runtime "com.h2database:h2"

    testCompile "org.grails:grails-plugin-testing"
    testCompile "org.grails.plugins:geb"
    testRuntime "org.seleniumhq.selenium:selenium-htmlunit-driver:2.47.1"
    testRuntime "net.sourceforge.htmlunit:htmlunit:2.18"
}

task wrapper(type: Wrapper) {
    gradleVersion = gradleWrapperVersion
}

task stage() {
    dependsOn clean, war
}
tasks.stage.doLast() {
    delete fileTree(dir: "build/distributions")
    delete fileTree(dir: "build/assetCompile")
    delete fileTree(dir: "build/distributions")
    delete fileTree(dir: "build/libs", exclude: "*.war")
}
war.mustRunAfter clean

task copyToLib(type: Copy) {
    into "$buildDir/server"
    from(configurations.compile) {
        include "webapp-runner*"
    }
}

stage.dependsOn(copyToLib)